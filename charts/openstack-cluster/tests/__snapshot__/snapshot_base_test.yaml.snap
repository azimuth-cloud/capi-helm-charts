templated manifests should match snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: autoscaler
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-autoscaler
    spec:
      replicas: 1
      selector:
        matchLabels:
          capi.stackhpc.com/cluster: RELEASE-NAME
          capi.stackhpc.com/component: autoscaler
      template:
        metadata:
          labels:
            capi.stackhpc.com/cluster: RELEASE-NAME
            capi.stackhpc.com/component: autoscaler
        spec:
          containers:
            - args:
                - --cloud-provider=clusterapi
                - --kubeconfig=/mnt/kubeconfig/value
                - --clusterapi-cloud-config-authoritative
                - --node-group-auto-discovery=clusterapi:namespace=NAMESPACE,clusterName=RELEASE-NAME
                - --cordon-node-before-terminating=true
                - --expander=least-waste,random
                - --logtostderr=true
                - --skip-nodes-with-custom-controller-pods=false
                - --skip-nodes-with-local-storage=false
                - --skip-nodes-with-system-pods=true
                - --stderrthreshold=info
                - --v=4
              command:
                - /cluster-autoscaler
              image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.30.4
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health-check
                  port: 8085
              name: autoscaler
              ports:
                - containerPort: 8085
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts:
                - mountPath: /mnt/kubeconfig
                  name: kubeconfig
                  readOnly: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          serviceAccountName: RELEASE-NAME-autoscaler
          volumes:
            - name: kubeconfig
              secret:
                secretName: RELEASE-NAME-kubeconfig
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: autoscaler
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-autoscaler
    rules:
      - apiGroups:
          - cluster.x-k8s.io
        resources:
          - machinedeployments
          - machines
          - machinesets
          - machinepools
        verbs:
          - get
          - list
          - update
          - watch
      - apiGroups:
          - cluster.x-k8s.io
        resources:
          - machinedeployments/scale
        verbs:
          - get
          - patch
          - update
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: autoscaler
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-autoscaler
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-autoscaler
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-autoscaler
        namespace: NAMESPACE
  4: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: autoscaler
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-autoscaler
  5: |
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackCluster
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME
    spec:
      apiServerLoadBalancer:
        enabled: true
      apiServerPort: 6443
      controlPlaneOmitAvailabilityZone: true
      disableAPIServerFloatingIP: false
      identityRef:
        cloudName: openstack
        name: RELEASE-NAME-cloud-credentials
      managedSecurityGroups:
        allowAllInClusterTraffic: true
      managedSubnets:
        - cidr: 192.168.3.0/24
  6: |
    apiVersion: cluster.x-k8s.io/v1beta1
    kind: Cluster
    metadata:
      annotations: {}
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME
    spec:
      clusterNetwork:
        pods:
          cidrBlocks:
            - 172.16.0.0/13
        serviceDomain: cluster.local
        services:
          cidrBlocks:
            - 172.24.0.0/13
      controlPlaneRef:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlane
        name: RELEASE-NAME-control-plane
        namespace: NAMESPACE
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OpenStackCluster
        name: RELEASE-NAME
        namespace: NAMESPACE
  7: |
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: control-plane
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-control-plane
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              admission-control-config-file: /etc/kubernetes/admission/configuration.yaml
              v: "2"
            extraVolumes:
              - hostPath: /etc/kubernetes/admission
                mountPath: /etc/kubernetes/admission
                name: admission-configuration
                pathType: Directory
                readOnly: true
          controllerManager:
            extraArgs:
              bind-address: 0.0.0.0
              cloud-provider: external
          etcd:
            local:
              dataDir: /var/lib/etcd
              extraArgs:
                election-timeout: "5000"
                heartbeat-interval: "500"
                listen-metrics-urls: http://0.0.0.0:2381
                quota-backend-bytes: "4294967296"
          scheduler:
            extraArgs:
              bind-address: 0.0.0.0
        files:
          - contentFrom:
              secret:
                key: admission-configuration.yaml
                name: RELEASE-NAME-admission-configuration
            owner: root:root
            path: /etc/kubernetes/admission/configuration.yaml
            permissions: "0644"
          - content: |
              # This file is created by the capi-helm-chart to ensure that its parent directory exists
            owner: root:root
            path: /etc/containerd/conf.d/.keepdir
            permissions: "0644"
          - content: |
              # This file is created by the capi-helm-chart to ensure that its parent directory exists
            owner: root:root
            path: /etc/containerd/certs.d/.keepdir
            permissions: "0644"
          - content: |2
              server = "https://registry-1.docker.io"
              [host."https://quay.io/v2/azimuth/docker.io"]
              capabilities = ["pull", "resolve"]
              skip_verify = false
              override_path = true
            owner: root:root
            path: /etc/containerd/certs.d/docker.io/hosts.toml
            permissions: "0644"
          - content: |2
              server = "https://ghcr.io"
              [host."https://quay.io/v2/azimuth/ghcr.io"]
              capabilities = ["pull", "resolve"]
              skip_verify = false
              override_path = true
            owner: root:root
            path: /etc/containerd/certs.d/ghcr.io/hosts.toml
            permissions: "0644"
          - content: |2
              server = "https://nvcr.io"
              [host."https://quay.io/v2/azimuth/nvcr.io"]
              capabilities = ["pull", "resolve"]
              skip_verify = false
              override_path = true
            owner: root:root
            path: /etc/containerd/certs.d/nvcr.io/hosts.toml
            permissions: "0644"
          - content: |2
              server = "https://quay.io"
              [host."https://quay.io/v2/azimuth/quay.io"]
              capabilities = ["pull", "resolve"]
              skip_verify = false
              override_path = true
            owner: root:root
            path: /etc/containerd/certs.d/quay.io/hosts.toml
            permissions: "0644"
          - content: |2
              server = "https://registry.k8s.io"
              [host."https://quay.io/v2/azimuth/registry.k8s.io"]
              capabilities = ["pull", "resolve"]
              skip_verify = false
              override_path = true
            owner: root:root
            path: /etc/containerd/certs.d/registry.k8s.io/hosts.toml
            permissions: "0644"
          - content: |
              ---
              apiVersion: kubeproxy.config.k8s.io/v1alpha1
              kind: KubeProxyConfiguration
              metricsBindAddress: 0.0.0.0:10249
            owner: root:root
            path: /run/kubeadm/kube-proxy-configuration.yaml
            permissions: "0644"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ local_hostname }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ local_hostname }}'
        preKubeadmCommands:
          - |-
            /usr/bin/bash -s <<EOF
            grep -q '\[plugins."io.containerd.grpc.v1.cri".registry\]' /etc/containerd/config.toml && exit
            cat <<CONTENT >> /etc/containerd/config.toml
            [plugins."io.containerd.grpc.v1.cri".registry]
              config_path = "/etc/containerd/certs.d"
            CONTENT
            systemctl restart containerd
            EOF
          - cat /run/kubeadm/kube-proxy-configuration.yaml >> /run/kubeadm/kubeadm.yaml
      machineTemplate:
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: OpenStackMachineTemplate
          name: RELEASE-NAME-control-plane-e39a716c
          namespace: NAMESPACE
        metadata:
          labels:
            capi.stackhpc.com/cluster: RELEASE-NAME
            capi.stackhpc.com/component: control-plane
        nodeDeletionTimeout: 5m0s
        nodeDrainTimeout: 5m0s
        nodeVolumeDetachTimeout: 5m0s
      remediationStrategy:
        maxRetry: 3
        minHealthyPeriod: 1h
        retryPeriod: 20m
      replicas: 3
      rolloutStrategy:
        rollingUpdate:
          maxSurge: 1
        type: RollingUpdate
      version: v1.29.2
  8: |
    apiVersion: cluster.x-k8s.io/v1beta1
    kind: MachineHealthCheck
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: control-plane
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-control-plane
    spec:
      clusterName: RELEASE-NAME
      maxUnhealthy: 1
      nodeStartupTimeout: 30m0s
      selector:
        matchLabels:
          capi.stackhpc.com/cluster: RELEASE-NAME
          capi.stackhpc.com/component: control-plane
      unhealthyConditions:
        - status: Unknown
          timeout: 5m0s
          type: Ready
        - status: "False"
          timeout: 5m0s
          type: Ready
  9: |
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackMachineTemplate
    metadata:
      annotations:
        capi.stackhpc.com/template-checksum: e39a716cdf1bf13ae070b43ebb6355fe88befcac4f72eedfcc3cfff10f0eabab
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: control-plane
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-control-plane-e39a716c
    spec:
      template:
        spec:
          flavor: vm.small
          identityRef:
            cloudName: openstack
            name: RELEASE-NAME-cloud-credentials
          image:
            filter:
              name: ubuntu-jammy-kube-v1.29.2
  10: |
    apiVersion: v1
    kind: Secret
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: admission-configuration
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-admission-configuration
    stringData:
      admission-configuration.yaml: |
        apiVersion: apiserver.config.k8s.io/v1
        kind: AdmissionConfiguration
        plugins: []
  11: |
    apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
    kind: KubeadmConfigTemplate
    metadata:
      annotations:
        capi.stackhpc.com/template-checksum: d43bd1bb079c9f949f46b9f6bf89e1e1027a45756426801398f5ab1199a331c4
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: worker
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        capi.stackhpc.com/node-group: group-1
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-group-1-d43bd1bb
    spec:
      template:
        spec:
          files:
            - content: |
                # This file is created by the capi-helm-chart to ensure that its parent directory exists
              owner: root:root
              path: /etc/containerd/conf.d/.keepdir
              permissions: "0644"
            - content: |
                # This file is created by the capi-helm-chart to ensure that its parent directory exists
              owner: root:root
              path: /etc/containerd/certs.d/.keepdir
              permissions: "0644"
            - content: |2
                server = "https://registry-1.docker.io"
                [host."https://quay.io/v2/azimuth/docker.io"]
                capabilities = ["pull", "resolve"]
                skip_verify = false
                override_path = true
              owner: root:root
              path: /etc/containerd/certs.d/docker.io/hosts.toml
              permissions: "0644"
            - content: |2
                server = "https://ghcr.io"
                [host."https://quay.io/v2/azimuth/ghcr.io"]
                capabilities = ["pull", "resolve"]
                skip_verify = false
                override_path = true
              owner: root:root
              path: /etc/containerd/certs.d/ghcr.io/hosts.toml
              permissions: "0644"
            - content: |2
                server = "https://nvcr.io"
                [host."https://quay.io/v2/azimuth/nvcr.io"]
                capabilities = ["pull", "resolve"]
                skip_verify = false
                override_path = true
              owner: root:root
              path: /etc/containerd/certs.d/nvcr.io/hosts.toml
              permissions: "0644"
            - content: |2
                server = "https://quay.io"
                [host."https://quay.io/v2/azimuth/quay.io"]
                capabilities = ["pull", "resolve"]
                skip_verify = false
                override_path = true
              owner: root:root
              path: /etc/containerd/certs.d/quay.io/hosts.toml
              permissions: "0644"
            - content: |2
                server = "https://registry.k8s.io"
                [host."https://quay.io/v2/azimuth/registry.k8s.io"]
                capabilities = ["pull", "resolve"]
                skip_verify = false
                override_path = true
              owner: root:root
              path: /etc/containerd/certs.d/registry.k8s.io/hosts.toml
              permissions: "0644"
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                cloud-provider: external
                node-labels: capi.stackhpc.com/node-group=group-1
              name: '{{ local_hostname }}'
          preKubeadmCommands:
            - |-
              /usr/bin/bash -s <<EOF
              grep -q '\[plugins."io.containerd.grpc.v1.cri".registry\]' /etc/containerd/config.toml && exit
              cat <<CONTENT >> /etc/containerd/config.toml
              [plugins."io.containerd.grpc.v1.cri".registry]
                config_path = "/etc/containerd/certs.d"
              CONTENT
              systemctl restart containerd
              EOF
  12: |
    apiVersion: cluster.x-k8s.io/v1beta1
    kind: MachineDeployment
    metadata:
      annotations: null
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: worker
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        capi.stackhpc.com/node-group: group-1
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-group-1
    spec:
      clusterName: RELEASE-NAME
      replicas: 1
      selector:
        matchLabels:
          capi.stackhpc.com/cluster: RELEASE-NAME
          capi.stackhpc.com/component: worker
          capi.stackhpc.com/node-group: group-1
          cluster.x-k8s.io/cluster-name: RELEASE-NAME
      strategy:
        rollingUpdate:
          deletePolicy: Random
          maxSurge: 0
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          labels:
            capi.stackhpc.com/cluster: RELEASE-NAME
            capi.stackhpc.com/component: worker
            capi.stackhpc.com/node-group: group-1
        spec:
          bootstrap:
            configRef:
              apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
              kind: KubeadmConfigTemplate
              name: RELEASE-NAME-group-1-d43bd1bb
          clusterName: RELEASE-NAME
          infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: OpenStackMachineTemplate
            name: RELEASE-NAME-group-1-974c4cfd
          nodeDeletionTimeout: 5m0s
          nodeDrainTimeout: 5m0s
          nodeVolumeDetachTimeout: 5m0s
          version: v1.29.2
  13: |
    apiVersion: cluster.x-k8s.io/v1beta1
    kind: MachineHealthCheck
    metadata:
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: worker
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        capi.stackhpc.com/node-group: group-1
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-group-1
    spec:
      clusterName: RELEASE-NAME
      maxUnhealthy: 100%
      nodeStartupTimeout: 30m0s
      selector:
        matchLabels:
          capi.stackhpc.com/cluster: RELEASE-NAME
          capi.stackhpc.com/component: worker
          capi.stackhpc.com/node-group: group-1
      unhealthyConditions:
        - status: Unknown
          timeout: 5m0s
          type: Ready
        - status: "False"
          timeout: 5m0s
          type: Ready
  14: |
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackMachineTemplate
    metadata:
      annotations:
        capi.stackhpc.com/template-checksum: 974c4cfd217a218b8577c9b1362980b997329854003b0b8d126a018fb0429b61
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: worker
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        capi.stackhpc.com/node-group: group-1
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-group-1-974c4cfd
    spec:
      template:
        spec:
          flavor: vm.small
          identityRef:
            cloudName: openstack
            name: RELEASE-NAME-cloud-credentials
          image:
            filter:
              name: ubuntu-jammy-kube-v1.29.2
  15: |
    apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        capi.stackhpc.com/cluster: RELEASE-NAME
        capi.stackhpc.com/component: cloud-credentials
        capi.stackhpc.com/infrastructure-provider: openstack
        capi.stackhpc.com/managed-by: Helm
        helm.sh/chart: openstack-cluster-0.1.0
      name: RELEASE-NAME-cloud-credentials
    stringData:
      clouds.yaml: |
        clouds:
          openstack:
            auth:
              application_credential_id: <app cred id>
              application_credential_secret: <app cred secret>
              auth_url: https://my.cloud:5000
            auth_type: v3applicationcredential
            identity_api_version: 3
            interface: public
            region_name: RegionOne
