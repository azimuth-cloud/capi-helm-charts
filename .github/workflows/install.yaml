name: Install Helm Charts
on: [workflow_call]

jobs:
  install:
    runs-on: self-hosted
    strategy:
      matrix:
        node: [kube-1.23.9, kube-1.24.2, kube-1.25.4]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install tools
        run: sudo apt install -y zip unzip 
      
      - name: Check if sonobuoy is installed
        id: sonobuoy_exists
        uses: andstor/file-existence-action@v2
        with:
          files: /usr/bin/sonobuoy
      
      - name: Install sonobuoy
        if: steps.sonobuoy_exists.outputs.files_exists == 'false'
        run: >
          wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v0.56.12/sonobuoy_0.56.12_linux_amd64.tar.gz
          && tar -xf sonobuoy_0.56.12_linux_amd64.tar.gz
          && sudo mv -n sonobuoy /usr/bin/

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      
      - name: Copy cloud creds to file
        run: 'echo "$TYLER_CLOUDS" > clouds.yml'
        shell: bash
        env:
          TYLER_CLOUDS: ${{ secrets.TYLER_CLOUDS }}
      
      - name: Install chart 
        run: helm upgrade test-${{ github.sha }}-${{ matrix.version }} charts/openstack-cluster -n namespace-${{ github.sha }}-${{ matrix.version }} --create-namespace --install -f clouds.yml -f charts/openstack-cluster/ci/${{ matrix.version }}.yaml --dependency-update

      - name: Wait for cluster READY
        run: kubectl wait -n namespace-${{ github.sha }}-${{ matrix.version }} clusters.cluster.x-k8s.io/test-${{ github.sha }}-${{ matrix.version }} --for=condition=Ready --timeout 20m

      - name: Wait for addons manifest
        run: kubectl wait manifests --all --for=jsonpath='{.status.phase}'=Deployed --namespace namespace-${{ github.sha }}-${{ matrix.version }} --selector capi.stackhpc.com/cluster=test-${{ github.sha }}-${{ matrix.version }} --timeout 20m
      
      - name: Wait for addons helmreleases 
        run: kubectl wait manifests --all --for=jsonpath='{.status.phase}'=Deployed --namespace namespace-${{ github.sha }}-${{ matrix.version }} --selector capi.stackhpc.com/cluster=test-${{ github.sha }}-${{ matrix.version }} --timeout 20m

      - name: Grab kubeconfig 
        run: kubectl -n namespace-${{ github.sha }}-${{ matrix.version }} get secret test-${{ github.sha }}-${{ matrix.version }}-kubeconfig -o jsonpath='{.data.value}' | base64 --decode > kubeconfig-${{ matrix.version }}

      - name: Run sonobuoy [smoke]
        run: sonobuoy run --mode quick --kubeconfig kubeconfig-${{ matrix.version }} --wait

      - name: Delete release
        run: helm delete -n namespace-${{ github.sha }}-${{ matrix.version }} test-${{ github.sha }}-${{ matrix.version }} --wait
      
      - name: Delete namespace 
        run: kubectl delete namespace namespace-${{ github.sha }}-${{ matrix.version }}
